version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_DOCKER://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8088:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    depends_on:
      - kafka

  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=achat_db
    ports:
      - 3306:3306
    volumes:
      - db:/var/lib/mysql
    networks:
     - spring-cloud-net
  eureka-service:
    build: ./Eureka-service
    container_name: eureka-service
    ports:
      - "8761:8761"
    networks:
      - spring-cloud-net

  config-server:
    build: ./Config-server
    container_name: config-server
    ports:
      - "8888:8888"
    depends_on:
      - eureka-service
    networks:
      - spring-cloud-net

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8085:8085"
    depends_on:
      - eureka-service
      - config-server
    networks:
      - spring-cloud-net

  employe-service:
    build: ./employe
    container_name: employe-service
    ports:
      - "8081:8081"
    depends_on:
      - eureka-service
      - config-server
      - kafka
    networks:
      - spring-cloud-net
  contrat-service:
    build: ./contrat-service
    container_name: contrat-service
    ports:
      - "8084:8084"
    depends_on:
      - eureka-service
      - config-server
      - kafka
    networks:
      - spring-cloud-net

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: employe_db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - mongo-data:/data/db
    networks:
      - spring-cloud-net

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: keycloak
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_REALM: myrealm
      KC_DB: dev-mem
    ports:
      - "8080:8080"
    networks:
      - spring-cloud-net

networks:
  spring-cloud-net:
    driver: bridge

volumes:
  db:
  mongo-data:
